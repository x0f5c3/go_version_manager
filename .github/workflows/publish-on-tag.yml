name: Publish-on-tag

on:
  push:
    tags:
      - 'v*'

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
     - name: Checkout
       uses: actions/checkout@v2
     - name: Create release
       id: create_release
       uses: actions/create-release@v1
       env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        body_path: CHANGELOG.md
  build_x64_linux:
    needs: [create_release]
    name: Publish binaries for linux x64
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      id: build
      run: cargo build --release && strip target/release/golang_downloader
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: target/release/golang_downloader
        asset_name: golang_downloader-linux-amd64
        asset_content_type: application/octet-stream
  build_arm64:
    needs: [create_release]
    name: Publish binaries arm64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-gnu
          override: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
         use-cross: true
         command: build
         args: --release --target aarch64-unknown-linux-gnu
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: target/aarch64-unknown-linux-gnu/release/golang_downloader
          asset_name: golang_downloader-linux-arm64
          asset_content_type: application/octet-stream
  build_x64_win:
    needs: [create_release]
    name: Publish binaries for windows x64
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: target/release/golang_downloader.exe
        asset_name: golang_downloader-windows-amd64.exe
        asset_content_type: application/octet-stream

  build_x64_mac:
    needs: [create_release]
    name: Publish binaries for macos x64
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release && strip target/release/golang_downloader
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: target/release/golang_downloader
        asset_name: golang_downloader-darwin-amd64
        asset_content_type: application/octet-stream
